//Plugins
apply plugin: 'java'
apply plugin: 'checkstyle'
apply plugin: 'eclipse'
apply plugin: 'jacoco'
apply plugin: 'com.github.kt3k.coveralls'
apply plugin: 'maven'
//apply plugin: 'signing'
//apply plugin: 'scala'

buildscript {
  repositories {
    maven {
      url "https://plugins.gradle.org/m2/"
    }
  }
  dependencies {
    classpath "net.ltgt.gradle:gradle-apt-plugin:0.6"
  }
}

apply plugin: "net.ltgt.apt"

//Java compile settings
[ compileJava, compileTestJava ]*.options*.encoding = 'UTF-8'

// Default tasks
defaultTasks 'check', 'build'

// Basic project information
group = theGroup
version = theVersion
description = theDescription
sourceCompatibility = theSourceCompatibility
archivesBaseName = theName

// Minimum version of Java required
sourceCompatibility = theSourceCompatibility
targetCompatibility = theSourceCompatibility

repositories {
	mavenCentral()
}

buildscript {
    repositories {
        mavenCentral()
    }

    dependencies {
        classpath 'org.kt3k.gradle.plugin:coveralls-gradle-plugin:2.0.1'
    }
}

jacocoTestReport {
    reports {
        xml.enabled = true // coveralls plugin depends on xml format report
        html.enabled = true
    }
}

dependencies {
  checkstyle('com.puppycrawl.tools:checkstyle:6.+')
  //compile fileTree(dir: 'libs', include: '*.jar')
  compile fileTree(dir: 'libs', include: 'JNBT_1.4.jar')
  compileOnly fileTree(dir: 'libs', include: 'org.eclipse.jdt.annotation_2.0.0.v20140415-1436.jar')
  compile group: 'com.google.guava', name: 'guava', version: '19.+'
  //compile 'org.scala-lang:scala-library:2.11.+'
  apt group: 'org.immutables', name: 'value', version: '2.+'
  compileOnly group: 'org.immutables', name: 'value', version: '2.+'
  testCompile group: 'junit', name: 'junit', version: '4.+'
  testCompile group: 'org.mockito', name: 'mockito-core', version: '2.+'
}

checkstyle {
	configFile = file('checkstyle.xml')
}

//command line arguments for utf8 support
//-encoding UTF-8 -charset UTF-8 -docencoding UTF-8
javadoc {
	options.addStringOption("encoding","UTF-8")
	options.addStringOption("charset","UTF-8")
	options.addStringOption("docencoding","UTF-8")
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives javadocJar, sourcesJar
}